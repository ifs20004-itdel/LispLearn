(defun makeDate(DD MM YY)
    (cond 
        ((and (> DD 29) (= MM 2) (= (mod YY 4) 0)) (format t "Tanggal tidak nyata"))
        ((and (> DD 28) (= MM 2) (/= (mod YY 4) 0)) (format t "Tanggal tidak nyata"))
        ((> MM 12) (format t "Tanggal tidak nyata"))
        ((and (or (= MM 4) (= MM 6) (= MM 9) (= MM 11)) (> DD 30)) (format t "Tanggal tidak nyata"))
        ((and (or (= MM 1) (= MM 3) (= MM 5) (= MM 7) (= MM 8) (= MM 10) (= MM 12)) (> DD 31)) (format t "Tanggal tidak nyata"))
        ((or (< DD 1) (< MM 1) (< YY 1)) (format t "Tanggal tidak nyata"))
        (t (cons DD (cons MM (cons YY nil))))
    )
)

(defun Day(D)
    (car D))
(defun Month(D)
    (car (cdr D)))
(defun Year(D)
    (car (cdr (cdr D))))

(defun nextDay(D)
    (cond 
        ((and (= (Day D) 28) (= (Month D) 2) (= (mod (Year D) 4) 0)) (cons (+ (Day D) 1) (list (Month D) (Year D))))
        ((and (= (Day D) 29) (= (Month D) 2) (= (mod (Year D) 4) 0)) (cons (- (Day D) 28) (list (+ (Month D) 1) (Year D))))
        ((and (= (Day D) 28) (= (Month D) 2) (/= (mod (Year D) 4) 0)) (cons (- (Day D) 27) (list (+ (Month D) 1) (Year D))))
        ((and (or (= (Month D) 1) (= (Month D) 3) (= (Month D) 5) (= (Month D) 7) (= (Month D) 8) (= (Month D) 10)) (= (Day D) 31)) 
            (cons (- (Day D) 30) (list (+ (Month D) 1) (Year D))))
        ((and (or (= (Month D) 4) (= (Month D) 6) (= (Month D) 9) (= (Month D) 11)) (= (Day D) 30)) 
            (cons (- (Day D) 29) (list (+ (Month D) 1) (Year D))))
        ((and (= (Day D) 31) (= (Month D) 12) (Year D)) (cons (- (Day D) 30) (list (- (Month D) 11) (+ (Year D) 1))))
        (t (cons (+ (Day D) 1) (list (Month D) (Year D))))
    )
)

(defun yesterday(D)
    (cond 
        ((and (= (Day D) 1) (= (Month D) 3) (= (mod (Year D) 4) 0)) (cons (+ (Day D) 28) (list (- (Month D) 1) (Year D))))
        ((and (= (Day D) 29) (= (Month D) 2) (= (mod (Year D) 4) 0)) (cons (- (Day D) 1) (list (Month D) (Year D))))
        ((and (= (Day D) 1) (= (Month D) 3) (/= (mod (Year D) 4) 0)) (cons (+ (Day D) 27) (list (- (Month D) 1) (Year D))))
        ((and (or (= (Month D) 2) (= (Month D) 4) (= (Month D) 6) (= (Month D) 8) (= (Month D) 9) (= (Month D) 11)) (= (Day D) 1)) (cons (+ (Day D) 30) (list (- (Month D) 1) (Year D))))
        ((and (or (= (Month D) 5) (= (Month D) 7) (= (Month D) 10) (= (Month D) 12)) (= (Day D) 1)) (cons (+ (Day D) 29) (list (- (Month D) 1) (Year D))))
        ((and (= (Day D) 1) (= (Month D) 1) (Year D)) (cons (+ (Day D) 30) (list (+ (Month D) 11) (- (Year D) 1))))
        (t (cons (- (Day D) 1) (list (Month D) (Year D))))
    )
)

(defun isEqD (D1 D2)
    (cond 
        ((and (= (Day D1) (Day D2)) (= (Month D1) (Month D2)) (= (Year D1) (Year D2))) 'True)
        (t 'False)
    )
)
(defun isBefore (D1 D2)
    (cond 
        ((and (= (Day D1) (Day D2)) (= (Month D1) (Month D2)) (= (Year D1) (Year D2))) 'True)
        (t 'False)
    )
)